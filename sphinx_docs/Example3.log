2024-08-06 09:30:56,571 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: Start.
2024-08-06 09:30:56,571 ; PT3S                                                         ; DEBUG   ; Dx.__init__: Start.#########
2024-08-06 09:30:56,572 ; PT3S                                                         ; INFO    ; Dx.__init__: dbFile (abspath): c:\users\aUserName\3s\pt3s\Examples\Example3.db3 exists readable ...
2024-08-06 09:30:56,586 ; PT3S                                                         ; DEBUG   ; Dx.__init__: tableNames: ['AB_DEF', 'AGSN', 'ALLG', 'ALLG_BZ', 'ANTP', 'ANTP_ROWS', 'ARRW', 'ATMO', 'AVOS', 'AVOS_ROWS', 'BENUTZER', 'BEVE', 'BEVE_BZ', 'BEWI', 'BEWI_BZ', 'BREF', 'BZAG', 'BZAG_BZ', 'CIRC', 'CONT', 'CRGL', 'DATENEBENE', 'DPGR', 'DPGR_BZ', 'DPGR_DPKT', 'DPKT', 'DPKT_BZ', 'DPRG', 'DPRG_BZ', 'DRNP', 'DTRO', 'DTRO_ROWD', 'EBES', 'EBES_BZ', 'ELEMENTQUERY', 'ETAM', 'ETAM_ROWS', 'ETAR', 'ETAR_ROWS', 'ETAU', 'ETAU_ROWS', 'FKNL', 'FKNL_BZ', 'FQPS', 'FQPS_BZ', 'FSTF', 'FWBZ', 'FWEA', 'FWEA_BZ', 'FWES', 'FWES_BZ', 'FWVB', 'FWVB_BZ', 'FWWU', 'FWWU_BZ', 'GEOMETRY_COLUMNS', 'GKMP', 'GMIX', 'GRAV', 'GTXT', 'GVWK', 'GVWK_BZ', 'HAUS', 'HYDR', 'HYDR_BZ', 'KLAP', 'KLAP_BZ', 'KNOT', 'KNOT_BZ', 'KOMK', 'KOMK_ROWS', 'KOMP', 'KOMP_BZ', 'LAYR', 'LFAL', 'LFAL_BZ', 'LFKT', 'LFKT_ROWT', 'LTGR', 'MAPG', 'MAPG_ROWS', 'MODELL', 'MREG', 'MREG_BZ', 'NRCV', 'NSCH', 'NSCH_BZ', 'OBEH', 'OBEH_BZ', 'OVAL', 'PARI', 'PARI_BZ', 'PARV', 'PARZ', 'PARZ_BZ', 'PGPR', 'PGRP', 'PGRP_BZ', 'PGRP_PUMP', 'PGRP_PUMP_BZ', 'PHI1', 'PHI1_ROWT', 'PHI2', 'PHI2_ROWS', 'PHIV', 'PHIV_ROWS', 'PHTR', 'PHTR_BZ', 'PLYG', 'POLY', 'PREG', 'PREG_BZ', 'PROZESSE', 'PUMD', 'PUMD_ROWT', 'PUMK', 'PUMK_ROWS', 'PUMP', 'PUMP_BZ', 'PVAR', 'PVAR_ROWT', 'PZON', 'PZVR', 'PZVR_BZ', 'QVAR', 'QVAR_ROWT', 'RADD', 'RADD_BZ', 'RART', 'RART_BZ', 'RCON', 'RCPL', 'RCPL_ROWT', 'RDIV', 'RDIV_BZ', 'RECT', 'REGP', 'REGV', 'REGV_BZ', 'RFKT', 'RFKT_BZ', 'RHYS', 'RHYS_BZ', 'RINT', 'RINT_BZ', 'RLSR', 'RLSR_BZ', 'RLVG', 'RLVG_BZ', 'RMES', 'RMES_BZ', 'RMES_DPTS', 'RMES_DPTS_BZ', 'RMMA', 'RMMA_BZ', 'RMUL', 'RMUL_BZ', 'ROHR', 'ROHR_BZ', 'ROHR_VRTX', 'RPFL', 'RPID', 'RPID_BZ', 'RPLAN', 'RPLAN_ROWS', 'RPT1', 'RPT1_BZ', 'RRCT', 'RSLW', 'RSLW_BZ', 'RSTE', 'RSTE_BZ', 'RSTN', 'RSTN_BZ', 'RTOT', 'RTOT_BZ', 'RUES', 'RUES_BZ', 'SIRGRAF', 'SIVE', 'SIVE_BZ', 'SOKO', 'SPLZ', 'SRAT', 'SRAT_ROWS', 'STOF', 'STOF_ROWS', 'STRASSE', 'STRO', 'STRO_BZ', 'SWVT', 'SWVT_ROWT', 'SYSTEMKONFIG', 'TEVT', 'TEVT_ROWT', 'TFKT', 'TFKT_ROWS', 'TIMD', 'TRFT', 'TRFT_ROWS', 'TRVA', 'UTMP', 'VARA_ROWS', 'VENT', 'VENT_BZ', 'VERB', 'VKNO', 'VRCT', 'WBLZ', 'WEVT', 'WEVT_ROWT', 'WIND', 'WIND_BZ', 'WTTR', 'WTTR_ROWT', 'ZEP1', 'ZEP1_ROWS', 'ZEP2', 'ZEP2_ROWS', 'VARA']
2024-08-06 09:30:56,586 ; PT3S                                                         ; DEBUG   ; Dx.__init__: viewNames: ['VIEW_MODELLE', 'VCIRC', 'VFWES', 'VFWVB', 'VFWWU', 'VGTXT', 'VKLAP', 'VKNOT', 'VPLYG', 'VPUMP', 'VROHR', 'VVENT']
2024-08-06 09:30:56,590 ; PT3S                                                         ; DEBUG   ; Dx.__init__: pair-tables: pairType: _BZ:
2024-08-06 09:30:56,601 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ALLG         BVZ: ALLG_BZ      V: V_BVZ_ALLG      constructed with        1 rows and  44 cols.
2024-08-06 09:30:56,614 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: BEVE         BVZ: BEVE_BZ      V: V_BVZ_BEVE      constructed with        1 rows and  76 cols.
2024-08-06 09:30:56,629 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: BEWI         BVZ: BEWI_BZ      V: V_BVZ_BEWI      constructed with        1 rows and  75 cols.
2024-08-06 09:30:56,629 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: BZAG         BVZ: BZAG_BZ      V: V_BVZ_BZAG      constructed with        1 rows and  26 cols.
2024-08-06 09:30:56,645 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: DPGR         BVZ: DPGR_BZ      V: V_BVZ_DPGR      constructed with       14 rows and  32 cols.
2024-08-06 09:30:56,664 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: DPKT         BVZ: DPKT_BZ      V: V_BVZ_DPKT      constructed with      635 rows and  49 cols.
2024-08-06 09:30:56,685 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: DPRG         BVZ: DPRG_BZ      V: V_BVZ_DPRG      constructed with        1 rows and  72 cols.
2024-08-06 09:30:56,696 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: EBES         BVZ: EBES_BZ      V: V_BVZ_EBES      constructed with        1 rows and  43 cols.
2024-08-06 09:30:56,715 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FKNL         BVZ: FKNL_BZ      V: V_BVZ_FKNL      constructed with        1 rows and  69 cols.
2024-08-06 09:30:56,728 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FQPS         BVZ: FQPS_BZ      V: V_BVZ_FQPS      constructed with        1 rows and  71 cols.
2024-08-06 09:30:56,750 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FWEA         BVZ: FWEA_BZ      V: V_BVZ_FWEA      constructed with        1 rows and 134 cols.
2024-08-06 09:30:56,769 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FWES         BVZ: FWES_BZ      V: V_BVZ_FWES      constructed with        2 rows and  60 cols.
2024-08-06 09:30:56,809 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FWVB         BVZ: FWVB_BZ      V: V_BVZ_FWVB      constructed with      339 rows and  83 cols.
2024-08-06 09:30:56,825 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: FWWU         BVZ: FWWU_BZ      V: V_BVZ_FWWU      constructed with        1 rows and  80 cols.
2024-08-06 09:30:56,842 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: GVWK         BVZ: GVWK_BZ      V: V_BVZ_GVWK      constructed with        1 rows and  67 cols.
2024-08-06 09:30:56,858 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: HYDR         BVZ: HYDR_BZ      V: V_BVZ_HYDR      constructed with        1 rows and  58 cols.
2024-08-06 09:30:56,875 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: KLAP         BVZ: KLAP_BZ      V: V_BVZ_KLAP      constructed with        3 rows and  56 cols.
2024-08-06 09:30:56,925 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: KNOT         BVZ: KNOT_BZ      V: V_BVZ_KNOT      constructed with      520 rows and  65 cols.
2024-08-06 09:30:56,942 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: KOMP         BVZ: KOMP_BZ      V: V_BVZ_KOMP      constructed with        1 rows and  80 cols.
2024-08-06 09:30:56,942 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: LFAL         BVZ: LFAL_BZ      V: V_BVZ_LFAL      constructed with        1 rows and  25 cols.
2024-08-06 09:30:56,962 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: MREG         BVZ: MREG_BZ      V: V_BVZ_MREG      constructed with        1 rows and  73 cols.
2024-08-06 09:30:56,975 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: NSCH         BVZ: NSCH_BZ      V: V_BVZ_NSCH      constructed with        1 rows and  46 cols.
2024-08-06 09:30:56,986 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: OBEH         BVZ: OBEH_BZ      V: V_BVZ_OBEH      constructed with        1 rows and  75 cols.
2024-08-06 09:30:56,992 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PARI         BVZ: PARI_BZ      V: V_BVZ_PARI      constructed with        1 rows and  31 cols.
2024-08-06 09:30:57,000 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PARZ         BVZ: PARZ_BZ      V: V_BVZ_PARZ      constructed with        1 rows and  28 cols.
2024-08-06 09:30:57,016 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PGRP         BVZ: PGRP_BZ      V: V_BVZ_PGRP      constructed with        2 rows and  61 cols.
2024-08-06 09:30:57,016 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PGRP_PUMP    BVZ: PGRP_PUMP_BZ V: V_BVZ_PGRP_PUMP constructed with        2 rows and  26 cols.
2024-08-06 09:30:57,032 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PHTR         BVZ: PHTR_BZ      V: V_BVZ_PHTR      constructed with        1 rows and  65 cols.
2024-08-06 09:30:57,049 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PREG         BVZ: PREG_BZ      V: V_BVZ_PREG      constructed with        1 rows and  71 cols.
2024-08-06 09:30:57,075 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PUMP         BVZ: PUMP_BZ      V: V_BVZ_PUMP      constructed with        2 rows and 142 cols.
2024-08-06 09:30:57,084 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PZVR         BVZ: PZVR_BZ      V: V_BVZ_PZVR      constructed with        1 rows and  30 cols.
2024-08-06 09:30:57,098 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RADD         BVZ: RADD_BZ      V: V_BVZ_RADD      constructed with        1 rows and  55 cols.
2024-08-06 09:30:57,104 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RART         BVZ: RART_BZ      V: V_BVZ_RART      constructed with        3 rows and  35 cols.
2024-08-06 09:30:57,119 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RDIV         BVZ: RDIV_BZ      V: V_BVZ_RDIV      constructed with        1 rows and  43 cols.
2024-08-06 09:30:57,129 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: REGV         BVZ: REGV_BZ      V: V_BVZ_REGV      constructed with        1 rows and  68 cols.
2024-08-06 09:30:57,146 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RFKT         BVZ: RFKT_BZ      V: V_BVZ_RFKT      constructed with        3 rows and  44 cols.
2024-08-06 09:30:57,159 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RHYS         BVZ: RHYS_BZ      V: V_BVZ_RHYS      constructed with        1 rows and  58 cols.
2024-08-06 09:30:57,165 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RINT         BVZ: RINT_BZ      V: V_BVZ_RINT      constructed with        1 rows and  56 cols.
2024-08-06 09:30:57,182 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RLSR         BVZ: RLSR_BZ      V: V_BVZ_RLSR      constructed with        1 rows and  54 cols.
2024-08-06 09:30:57,201 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RLVG         BVZ: RLVG_BZ      V: V_BVZ_RLVG      constructed with        2 rows and  42 cols.
2024-08-06 09:30:57,217 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RMES         BVZ: RMES_BZ      V: V_BVZ_RMES      constructed with        4 rows and  52 cols.
2024-08-06 09:30:57,222 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RMES_DPTS    BVZ: RMES_DPTS_BZ V: V_BVZ_RMES_DPTS constructed with        5 rows and  29 cols.
2024-08-06 09:30:57,235 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RMMA         BVZ: RMMA_BZ      V: V_BVZ_RMMA      constructed with        1 rows and  55 cols.
2024-08-06 09:30:57,247 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RMUL         BVZ: RMUL_BZ      V: V_BVZ_RMUL      constructed with        1 rows and  56 cols.
2024-08-06 09:30:57,294 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ROHR         BVZ: ROHR_BZ      V: V_BVZ_ROHR      constructed with      527 rows and  74 cols.
2024-08-06 09:30:57,306 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RPID         BVZ: RPID_BZ      V: V_BVZ_RPID      constructed with        1 rows and  63 cols.
2024-08-06 09:30:57,318 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RPT1         BVZ: RPT1_BZ      V: V_BVZ_RPT1      constructed with        1 rows and  56 cols.
2024-08-06 09:30:57,325 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RSLW         BVZ: RSLW_BZ      V: V_BVZ_RSLW      constructed with        5 rows and  50 cols.
2024-08-06 09:30:57,351 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RSTE         BVZ: RSTE_BZ      V: V_BVZ_RSTE      constructed with        1 rows and 104 cols.
2024-08-06 09:30:57,373 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RSTN         BVZ: RSTN_BZ      V: V_BVZ_RSTN      constructed with        8 rows and  77 cols.
2024-08-06 09:30:57,375 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RTOT         BVZ: RTOT_BZ      V: V_BVZ_RTOT      constructed with        1 rows and  55 cols.
2024-08-06 09:30:57,392 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RUES         BVZ: RUES_BZ      V: V_BVZ_RUES      constructed with       25 rows and  43 cols.
2024-08-06 09:30:57,408 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: SIVE         BVZ: SIVE_BZ      V: V_BVZ_SIVE      constructed with        1 rows and  70 cols.
2024-08-06 09:30:57,425 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: STRO         BVZ: STRO_BZ      V: V_BVZ_STRO      constructed with        1 rows and  72 cols.
2024-08-06 09:30:57,454 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: VENT         BVZ: VENT_BZ      V: V_BVZ_VENT      constructed with       12 rows and  69 cols.
2024-08-06 09:30:57,470 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: WIND         BVZ: WIND_BZ      V: V_BVZ_WIND      constructed with        1 rows and  76 cols.
2024-08-06 09:30:57,470 ; PT3S                                                         ; DEBUG   ; Dx.__init__: pair-tables: pairType: _ROWS:
2024-08-06 09:30:57,475 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ANTP         BVZ: ANTP_ROWS    V: V_BVZ_ANTP      constructed with        1 rows and  43 cols.
2024-08-06 09:30:57,492 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: AVOS         BVZ: AVOS_ROWS    V: V_BVZ_AVOS      constructed with        3 rows and  43 cols.
2024-08-06 09:30:57,500 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ETAM         BVZ: ETAM_ROWS    V: V_BVZ_ETAM      constructed with        7 rows and  43 cols.
2024-08-06 09:30:57,632 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ETAR         BVZ: ETAR_ROWS    V: V_BVZ_ETAR      constructed with        7 rows and  43 cols.
2024-08-06 09:30:57,647 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ETAU         BVZ: ETAU_ROWS    V: V_BVZ_ETAU      constructed with        7 rows and  43 cols.
2024-08-06 09:30:57,661 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: KOMK         BVZ: KOMK_ROWS    V: V_BVZ_KOMK      constructed with        1 rows and  53 cols.
2024-08-06 09:30:57,691 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: MAPG         BVZ: MAPG_ROWS    V: V_BVZ_MAPG      constructed with        3 rows and  60 cols.
2024-08-06 09:30:57,697 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PHI2         BVZ: PHI2_ROWS    V: V_BVZ_PHI2      constructed with        4 rows and  44 cols.
2024-08-06 09:30:57,715 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PHIV         BVZ: PHIV_ROWS    V: V_BVZ_PHIV      constructed with        9 rows and  43 cols.
2024-08-06 09:30:57,729 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PUMK         BVZ: PUMK_ROWS    V: V_BVZ_PUMK      constructed with        8 rows and  49 cols.
2024-08-06 09:30:57,742 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RPLAN        BVZ: RPLAN_ROWS   V: V_BVZ_RPLAN     constructed with        1 rows and  54 cols.
2024-08-06 09:30:57,756 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: SRAT         BVZ: SRAT_ROWS    V: V_BVZ_SRAT      constructed with        1 rows and  44 cols.
2024-08-06 09:30:57,774 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: STOF         BVZ: STOF_ROWS    V: V_BVZ_STOF      constructed with      201 rows and  47 cols.
2024-08-06 09:30:57,792 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: TFKT         BVZ: TFKT_ROWS    V: V_BVZ_TFKT      constructed with      423 rows and  43 cols.
2024-08-06 09:30:57,802 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: TRFT         BVZ: TRFT_ROWS    V: V_BVZ_TRFT      constructed with        2 rows and  43 cols.
2024-08-06 09:30:57,808 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: VARA         BVZ: VARA_ROWS    V: V_BVZ_VARA      constructed with       16 rows and  63 cols.
2024-08-06 09:30:57,825 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ZEP1         BVZ: ZEP1_ROWS    V: V_BVZ_ZEP1      constructed with       21 rows and  46 cols.
2024-08-06 09:30:57,842 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: ZEP2         BVZ: ZEP2_ROWS    V: V_BVZ_ZEP2      constructed with       42 rows and  48 cols.
2024-08-06 09:30:57,842 ; PT3S                                                         ; DEBUG   ; Dx.__init__: pair-tables: pairType: _ROWT:
2024-08-06 09:30:57,858 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: LFKT         BVZ: LFKT_ROWT    V: V_BVZ_LFKT      constructed with        6 rows and  38 cols.
2024-08-06 09:30:57,875 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PHI1         BVZ: PHI1_ROWT    V: V_BVZ_PHI1      constructed with        2 rows and  38 cols.
2024-08-06 09:30:57,888 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PUMD         BVZ: PUMD_ROWT    V: V_BVZ_PUMD      constructed with        2 rows and  38 cols.
2024-08-06 09:30:57,892 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: PVAR         BVZ: PVAR_ROWT    V: V_BVZ_PVAR      constructed with        1 rows and  38 cols.
2024-08-06 09:30:57,908 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: QVAR         BVZ: QVAR_ROWT    V: V_BVZ_QVAR      constructed with        1 rows and  38 cols.
2024-08-06 09:30:57,919 ; PT3S                                                         ; DEBUG   ; Dx.fHelperCONTetc: pairType ROWT: df RCPL hat keine Spalte ZEIT? Keine Sortierung nach Zeit.
2024-08-06 09:30:57,919 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: RCPL         BVZ: RCPL_ROWT    V: V_BVZ_RCPL      constructed with        3 rows and  13 cols.
2024-08-06 09:30:58,054 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: SWVT         BVZ: SWVT_ROWT    V: V_BVZ_SWVT      constructed with    17617 rows and  38 cols.
2024-08-06 09:30:58,060 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: TEVT         BVZ: TEVT_ROWT    V: V_BVZ_TEVT      constructed with        3 rows and  38 cols.
2024-08-06 09:30:58,060 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: WEVT         BVZ: WEVT_ROWT    V: V_BVZ_WEVT      constructed with        1 rows and  38 cols.
2024-08-06 09:30:58,075 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: WTTR         BVZ: WTTR_ROWT    V: V_BVZ_WTTR      constructed with        0 rows and  45 cols.
2024-08-06 09:30:58,075 ; PT3S                                                         ; DEBUG   ; Dx.__init__: pair-tables: pairType: _ROWD:
2024-08-06 09:30:58,093 ; PT3S                                                         ; DEBUG   ; Dx.__init__: BV: DTRO         BVZ: DTRO_ROWD    V: V_BVZ_DTRO      constructed with       73 rows and  55 cols.
2024-08-06 09:30:58,093 ; PT3S                                                         ; DEBUG   ; Dx.__init__: tables which are not pair-tables:
2024-08-06 09:30:58,101 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: AB_DEF           V: V_AB_DEF             constructed with        1 rows and  16 cols.
2024-08-06 09:30:58,109 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: AGSN             V: V_AGSN               constructed with        4 rows and  37 cols.
2024-08-06 09:30:58,109 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: ARRW             V: V_ARRW               constructed with        1 rows and  52 cols.
2024-08-06 09:30:58,126 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: ATMO             V: V_ATMO               constructed with        2 rows and  37 cols.
2024-08-06 09:30:58,129 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: BENUTZER         V: V_BENUTZER           constructed with        0 rows and  26 cols.
2024-08-06 09:30:58,140 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: BREF             V: V_BREF               constructed with        1 rows and  52 cols.
2024-08-06 09:30:58,157 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: CIRC             V: V_CIRC               constructed with        4 rows and  52 cols.
2024-08-06 09:30:58,159 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: CONT             V: V_CONT               constructed with        7 rows and  41 cols.
2024-08-06 09:30:58,186 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: CRGL             V: V_CRGL               constructed with       33 rows and  53 cols.
2024-08-06 09:30:58,188 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: DATENEBENE       V: V_DATENEBENE         constructed with        4 rows and  11 cols.
2024-08-06 09:30:58,198 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: DPGR_DPKT        V: V_DPGR_DPKT          constructed with      693 rows and  34 cols.
2024-08-06 09:30:58,202 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: DRNP             V: V_DRNP               constructed with        2 rows and  38 cols.
2024-08-06 09:30:58,208 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: ELEMENTQUERY     V: V_ELEMENTQUERY       constructed with       50 rows and  36 cols.
2024-08-06 09:30:58,214 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: FSTF             V: V_FSTF               constructed with        2 rows and  51 cols.
2024-08-06 09:30:58,218 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: FWBZ             V: V_FWBZ               constructed with        2 rows and  40 cols.
2024-08-06 09:30:58,218 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: GEOMETRY_COLUMNS V: V_GEOMETRY_COLUMNS   constructed with       11 rows and   7 cols.
2024-08-06 09:30:58,222 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: GKMP             V: V_GKMP               constructed with        1 rows and  55 cols.
2024-08-06 09:30:58,229 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: GMIX             V: V_GMIX               constructed with        1 rows and  80 cols.
2024-08-06 09:30:58,232 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: GRAV             V: V_GRAV               constructed with        2 rows and  35 cols.
2024-08-06 09:30:58,245 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: GTXT             V: V_GTXT               constructed with        2 rows and  54 cols.
2024-08-06 09:30:58,246 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: HAUS             V: V_HAUS               constructed with        1 rows and  43 cols.
2024-08-06 09:30:58,246 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: LAYR             V: V_LAYR               constructed with       10 rows and  38 cols.
2024-08-06 09:30:58,258 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: LTGR             V: V_LTGR               constructed with        3 rows and  38 cols.
2024-08-06 09:30:58,261 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: MODELL           V: V_MODELL             constructed with        1 rows and  18 cols.
2024-08-06 09:30:58,281 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: NRCV             V: V_NRCV               constructed with       27 rows and  61 cols.
2024-08-06 09:30:58,287 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: OVAL             V: V_OVAL               constructed with        1 rows and  52 cols.
2024-08-06 09:30:58,289 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: PARV             V: V_PARV               constructed with        2 rows and  45 cols.
2024-08-06 09:30:58,296 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: PGPR             V: V_PGPR               constructed with        2 rows and  36 cols.
2024-08-06 09:30:58,323 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: PLYG             V: V_PLYG               constructed with      338 rows and  53 cols.
2024-08-06 09:30:58,327 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: POLY             V: V_POLY               constructed with        1 rows and  53 cols.
2024-08-06 09:30:58,333 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: PROZESSE         V: V_PROZESSE           constructed with        0 rows and  21 cols.
2024-08-06 09:30:58,340 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: PZON             V: V_PZON               constructed with        2 rows and  43 cols.
2024-08-06 09:30:58,345 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: RCON             V: V_RCON               constructed with        2 rows and  35 cols.
2024-08-06 09:30:58,352 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: RECT             V: V_RECT               constructed with        1 rows and  52 cols.
2024-08-06 09:30:58,355 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: REGP             V: V_REGP               constructed with        2 rows and  34 cols.
2024-08-06 09:30:58,360 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: ROHR_VRTX        V: V_ROHR_VRTX          constructed with        1 rows and  36 cols.
2024-08-06 09:30:58,374 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: RPFL             V: V_RPFL               constructed with        3 rows and  52 cols.
2024-08-06 09:30:58,382 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: RRCT             V: V_RRCT               constructed with        1 rows and  52 cols.
2024-08-06 09:30:58,388 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: SIRGRAF          V: V_SIRGRAF            constructed with        2 rows and  67 cols.
2024-08-06 09:30:58,395 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: SOKO             V: V_SOKO               constructed with       26 rows and  69 cols.
2024-08-06 09:30:58,400 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: SPLZ             V: V_SPLZ               constructed with        4 rows and  44 cols.
2024-08-06 09:30:58,400 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: STRASSE          V: V_STRASSE            constructed with       21 rows and  37 cols.
2024-08-06 09:30:58,400 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: SYSTEMKONFIG     V: V_SYSTEMKONFIG       constructed with        4 rows and   4 cols.
2024-08-06 09:30:58,411 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: TIMD             V: V_TIMD               constructed with        2 rows and  40 cols.
2024-08-06 09:30:58,415 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: TRVA             V: V_TRVA               constructed with        2 rows and  45 cols.
2024-08-06 09:30:58,419 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: UTMP             V: V_UTMP               constructed with        2 rows and  35 cols.
2024-08-06 09:30:58,422 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: VARA             V: V_VARA               constructed with        8 rows and  35 cols.
2024-08-06 09:30:58,430 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: VERB             V: V_VERB               constructed with        2 rows and  74 cols.
2024-08-06 09:30:58,446 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: VKNO             V: V_VKNO               constructed with        7 rows and  54 cols.
2024-08-06 09:30:58,450 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: VRCT             V: V_VRCT               constructed with        1 rows and  37 cols.
2024-08-06 09:30:58,454 ; PT3S                                                         ; DEBUG   ; Dx.__init__: table: WBLZ             V: V_WBLZ               constructed with        2 rows and  39 cols.
2024-08-06 09:30:58,456 ; PT3S                                                         ; DEBUG   ; Dx.__init__: expanding V_BVZ_ROHR with NAME_DTRO, DN, DI, DA, S, KT, PN, Am2, Vm3 ...
2024-08-06 09:30:58,476 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_ROHR: expanding V_BVZ_ROHR with  NAME_LTGR, NAME_STRASSE, tk_i, NAME_i, tk_k, NAME_k ...
2024-08-06 09:30:58,488 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_SWVT: expanding V_BVZ_SWVT ...
2024-08-06 09:30:58,511 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_ROWT: combining ROWT_tables like V_BVZ_LFKT, V_BVZ_PVAR, ...
2024-08-06 09:30:58,546 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_TFKT: ...
2024-08-06 09:30:58,554 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_RSLW_SWVT: combining RSLW and SWVT ...
2024-08-06 09:30:58,594 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_KNOT: expanding V_BVZ_KNOT with NAME_LFKT, NAME_PVAR, NAME_PZON,NAME_QVAR,NAME_UTMP,NAME_FSTF,NAME_FQPS ...
2024-08-06 09:30:58,628 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_FWVB: expanding V_BVZ_FWVB with NAME_LFKT, NAME_ZEP1VL, NAME_ZEP1RL, NAME_TEVT, NAME_TRFT, tk_i, NAME_i, tk_k, NAME_k, ...
2024-08-06 09:30:58,650 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_:ROHR,KNOT,FWVB: filterTemplateObjects ...
2024-08-06 09:30:58,654 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_VBEL: ...
2024-08-06 09:30:58,695 ; PT3S                                                         ; DEBUG   ; Dx.__init__: FWES final in V3_VBEL-View (2,299) ...
2024-08-06 09:30:58,709 ; PT3S                                                         ; DEBUG   ; Dx.__init__: FWVB final in V3_VBEL-View (338,322) ...
2024-08-06 09:30:58,731 ; PT3S                                                         ; DEBUG   ; Dx.__init__: KLAP final in V3_VBEL-View (3,295) ...
2024-08-06 09:30:58,765 ; PT3S                                                         ; DEBUG   ; Dx.__init__: PGRP final in V3_VBEL-View (2,300) ...
2024-08-06 09:30:58,803 ; PT3S                                                         ; DEBUG   ; Dx.__init__: PUMP final in V3_VBEL-View (2,381) ...
2024-08-06 09:30:58,840 ; PT3S                                                         ; DEBUG   ; Dx.__init__: ROHR final in V3_VBEL-View (524,322) ...
2024-08-06 09:30:58,866 ; PT3S                                                         ; DEBUG   ; Dx.__init__: VENT final in V3_VBEL-View (12,308) ...
2024-08-06 09:30:59,122 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_DPKT ...
2024-08-06 09:30:59,143 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_RKNOT ...
2024-08-06 09:30:59,177 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_RRUES ...
2024-08-06 09:30:59,242 ; PT3S                                                         ; DEBUG   ; Dx.__init__: V3_RVBEL ...
2024-08-06 09:30:59,253 ; PT3S                                                         ; DEBUG   ; Dx.__init__: _Done.#########
2024-08-06 09:30:59,258 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: detecting MX-Source for dx.dbFile (abspath) c:\users\jablonski\3s\pt3s\Examples\Example3.db3 ...
2024-08-06 09:30:59,258 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: wDir from dbFile: .\WDExample3
2024-08-06 09:30:59,258 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: abspath of wDir from dbFile: c:\users\jablonski\3s\pt3s\Examples\WDExample3
2024-08-06 09:30:59,258 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: wDirMx from abspath of wDir from dbFile: c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1
2024-08-06 09:30:59,263 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: mx1File: ..\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MX1
2024-08-06 09:30:59,263 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: corresponding dbFileMxPkl-File: ..\Examples\Example3-mx-_Examples_WDExample3_B1_V0_BZ1_M_1_0_1_1_MX1.pkl
2024-08-06 09:30:59,263 ; PT3S                                                         ; INFO    ; dxAndMxHelperFcts.readDxAndMx: 
+..\Examples\Example3.db3 is newer than
+..\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MX1:
+SIR 3S' dbFile is newer than SIR 3S' mx1File
+in this case the results are maybe dated or (worse) incompatible to the model
2024-08-06 09:30:59,263 ; PT3S                                                         ; INFO    ; dxAndMxHelperFcts.readDxAndMx: 
+..\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.XML is newer than
+..\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MX1:
+SirCalc's xmlFile is newer than SIR 3S' mx1File
+in this case the results are maybe dated or (worse) incompatible to the model
2024-08-06 09:30:59,890 ; PT3S                                                         ; INFO    ; dxAndMxHelperFcts.readDxAndMx: running C:\\3S\SIR 3S\SirCalc-90-14-02-10_Potsdam\SirCalc.exe ...
2024-08-06 09:31:07,375 ; PT3S                                                         ; DEBUG   ; Mx.__init__: Start.#########
2024-08-06 09:31:07,375 ; PT3S                                                         ; DEBUG   ; Mx._initWithMx1: Start.
2024-08-06 09:31:07,375 ; PT3S                                                         ; DEBUG   ; Mx._parseMx1: Start.
2024-08-06 09:31:07,410 ; PT3S                                                         ; DEBUG   ; Mx._parseMx1: mx1File: c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MX1 mx1Df read. Shape: (494, 22).
2024-08-06 09:31:07,442 ; PT3S                                                         ; DEBUG   ; Mx._parseMx1: mx1Df after some generated Columns: Shape: (494, 27).
2024-08-06 09:31:07,442 ; PT3S                                                         ; DEBUG   ; Mx._parseMx1: _Done.
2024-08-06 09:31:07,442 ; PT3S                                                         ; DEBUG   ; Mx._parseMx2: Start.
2024-08-06 09:31:07,458 ; PT3S                                                         ; DEBUG   ; Mx._parseMx2: _Done.
2024-08-06 09:31:07,458 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtString: Start.
2024-08-06 09:31:07,473 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtString: Bytes per MX-Record=159244. Bytes Unpacked=159244 (making up 100.00 Bytes-%).
2024-08-06 09:31:07,475 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtString: mx1Df after generated Column: Shape: (494, 28).
2024-08-06 09:31:07,475 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtString: _Done.
2024-08-06 09:31:07,475 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtStringPost: Start.
2024-08-06 09:31:07,528 ; PT3S                                                         ; DEBUG   ; Mx._buildMxRecordStructUnpackFmtStringPost: _Done.
2024-08-06 09:31:07,529 ; PT3S                                                         ; DEBUG   ; Mx._initWithMx1: _Done.
2024-08-06 09:31:07,530 ; PT3S                                                         ; DEBUG   ; Mx.__init__: mxsFile c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS exists _and is newer than mx1File c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MX1 _and NoMxsRead False:
2024-08-06 09:31:07,530 ; PT3S                                                         ; DEBUG   ; Mx.__init__: mxsFile is read.
2024-08-06 09:31:07,531 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: Start.
2024-08-06 09:31:07,531 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: Mxs: Implicit specified.
2024-08-06 09:31:07,531 ; PT3S                                                         ; DEBUG   ; Mx._handleMxsVecsFileDeletion: Start.
2024-08-06 09:31:07,533 ; PT3S                                                         ; DEBUG   ; Mx._handleMxsVecsFileDeletion: Delete H5Dump because Mxs c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS To Read is newer than H5Dump c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.vec.h5 ...
2024-08-06 09:31:07,535 ; PT3S                                                         ; DEBUG   ; Mx._handleMxsVecsFileDeletion: _Done.
2024-08-06 09:31:07,547 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: Mxs: c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS opening ...
2024-08-06 09:31:07,556 ; PT3S                                                         ; INFO    ; Mx.setResultsToMxsFile: Mxs: ..\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS reading ...
2024-08-06 09:31:07,559 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: Start.
2024-08-06 09:31:07,563 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFileSingleRecord: CVERSO: SIR 3S 90-14-02-10 3S Consult, 30827 Garbsen - 06.08.2024 09:31 - M-1-0-1       .
2024-08-06 09:31:07,722 ; PT3S                                                         ; DEBUG   ; Mx._processToDfVecAggs: cSNAPSHOTTYPE STAT     processed to (empty) dfVecAggs with TIMESTAMPL: 2023-02-12 23:00:00+00:00
2024-08-06 09:31:07,723 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      1 read and processed finally=2023-02-12 23:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: STAT. - H5Dump: YES: key=/                   0 not in keys.
2024-08-06 09:31:07,855 ; PT3S                                                         ; DEBUG   ; Mx._processToDfVecAggs: cSNAPSHOTTYPE TIME     processed to         dfVecAggs with TIMESTAMPL: 2023-02-12 23:00:00+00:00
2024-08-06 09:31:07,858 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      2 read and processed finally=2023-02-12 23:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/                   0 not in keys - Nr.      1.
2024-08-06 09:31:07,858 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      3 read and processed finally=2023-02-13 00:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/             3600000 not in keys.
2024-08-06 09:31:07,866 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      4 read and processed finally=2023-02-13 01:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/             7200000 not in keys.
2024-08-06 09:31:07,872 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      5 read and processed finally=2023-02-13 02:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            10800000 not in keys.
2024-08-06 09:31:07,875 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      6 read and processed finally=2023-02-13 03:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            14400000 not in keys.
2024-08-06 09:31:07,875 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      7 read and processed finally=2023-02-13 04:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            18000000 not in keys.
2024-08-06 09:31:07,888 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      8 read and processed finally=2023-02-13 05:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            21600000 not in keys.
2024-08-06 09:31:07,892 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.      9 read and processed finally=2023-02-13 06:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            25200000 not in keys.
2024-08-06 09:31:07,892 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     10 read and processed finally=2023-02-13 07:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            28800000 not in keys.
2024-08-06 09:31:07,898 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     11 read and processed finally=2023-02-13 08:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            32400000 not in keys.
2024-08-06 09:31:07,903 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     12 read and processed finally=2023-02-13 09:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            36000000 not in keys.
2024-08-06 09:31:07,912 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     13 read and processed finally=2023-02-13 10:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            39600000 not in keys.
2024-08-06 09:31:07,917 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     14 read and processed finally=2023-02-13 11:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            43200000 not in keys.
2024-08-06 09:31:07,921 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     15 read and processed finally=2023-02-13 12:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            46800000 not in keys.
2024-08-06 09:31:07,925 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     16 read and processed finally=2023-02-13 13:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            50400000 not in keys.
2024-08-06 09:31:07,930 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     17 read and processed finally=2023-02-13 14:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            54000000 not in keys.
2024-08-06 09:31:07,935 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     18 read and processed finally=2023-02-13 15:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            57600000 not in keys.
2024-08-06 09:31:07,939 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     19 read and processed finally=2023-02-13 16:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            61200000 not in keys.
2024-08-06 09:31:07,945 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     20 read and processed finally=2023-02-13 17:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            64800000 not in keys.
2024-08-06 09:31:07,950 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     21 read and processed finally=2023-02-13 18:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            68400000 not in keys.
2024-08-06 09:31:07,953 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     22 read and processed finally=2023-02-13 19:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            72000000 not in keys.
2024-08-06 09:31:07,958 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     23 read and processed finally=2023-02-13 20:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            75600000 not in keys.
2024-08-06 09:31:07,962 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     24 read and processed finally=2023-02-13 21:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            79200000 not in keys.
2024-08-06 09:31:07,962 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     25 read and processed finally=2023-02-13 22:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            82800000 not in keys.
2024-08-06 09:31:07,962 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     26 read and processed finally=2023-02-13 23:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TIME. - H5Dump: YES: key=/            86400000 not in keys.
2024-08-06 09:31:08,165 ; PT3S                                                         ; DEBUG   ; Mx._processToDfVecAggs: cSNAPSHOTTYPE TMIN     processed to         dfVecAggs with TIMESTAMPL: 2023-02-12 23:00:00+00:00
2024-08-06 09:31:08,165 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     27 read and processed finally=2023-02-13 23:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TMIN. - H5Dump: YES: key=/            86400000 not in keys.
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx._processToDfVecAggs: cSNAPSHOTTYPE TMAX     processed to         dfVecAggs with TIMESTAMPL: 2023-02-12 23:00:00+00:00
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: TimeNr.     28 read and processed finally=2023-02-13 23:00:00.000000+0000 Values (without TIMESTAMP): 329 - Actual SNAPSHOTTYPE: TMAX. - H5Dump: YES: key=/            86400000 not in keys.
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: File finished: Records read=28. Last Time read=2023-02-13 23:00:00.000000+0000. MB read=0004.46.
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: df.shape(): (28, 329).
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx._readMxsFile: _Done.
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: Mxs: c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS: NOT unique TIMESTAMPS: Their dfMxs Shape: (3, 329).
2024-08-06 09:31:08,469 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: Mxs: c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS: Assigned.     df Shape: (25, 329).
2024-08-06 09:31:08,483 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: RESULT after c:\users\jablonski\3s\pt3s\Examples\WDExample3\B1\V0\BZ1\M-1-0-1.1.MXS: df Shape: (25, 329) First Time: 2023-02-12 23:00:00+00:00 Last Time: 2023-02-13 23:00:00+00:00.
2024-08-06 09:31:08,495 ; PT3S                                                         ; DEBUG   ; Mx.setResultsToMxsFile: _Done.
2024-08-06 09:31:08,495 ; PT3S                                                         ; DEBUG   ; Mx.__init__: _Done.#########
2024-08-06 09:31:08,496 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: MX read ok so far.
2024-08-06 09:31:08,496 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Start.
2024-08-06 09:31:08,496 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Layr: Start.
2024-08-06 09:31:08,930 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Layr: _Done.
2024-08-06 09:31:08,944 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Wblz: Start.
2024-08-06 09:31:08,946 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Wblz: no WBLZs available ...
2024-08-06 09:31:08,946 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Wblz: _Done.
2024-08-06 09:31:08,946 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Agsn: Start.
2024-08-06 09:31:09,300 ; PT3S                                                         ; DEBUG   ; dxDecodeObjsData.Agsn: _Done.
2024-08-06 09:31:09,301 ; PT3S                                                         ; INFO    ; dxWithMx.__init__: Example3: processing dx and mx ...
2024-08-06 09:31:09,301 ; PT3S                                                         ; DEBUG   ; Dx.MxSync: Start.
2024-08-06 09:31:09,348 ; PT3S                                                         ; DEBUG   ; Dx.MxSync: _Done.
2024-08-06 09:31:09,356 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Start.
2024-08-06 09:31:09,356 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: dfName: V3_KNOT: read Results:
2024-08-06 09:31:09,363 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: dfName: V3_ROHR: read Results:
2024-08-06 09:31:09,381 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: dfName: V3_FWVB: read Results:
2024-08-06 09:31:09,398 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: dfName: V3_ROHR: addNodeData:
2024-08-06 09:31:09,405 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: dfName: V3_FWVB: addNodeData:
2024-08-06 09:31:09,411 ; PT3S                                                         ; DEBUG   ; Mx.getVecAggsResultsForAttributeType: Start.
2024-08-06 09:31:09,411 ; PT3S                                                         ; DEBUG   ; Mx.getVecAggsResultsForAttributeType: Sir3sIDsMatching: ['FWES~*~*~*~QM', 'FWVB~*~*~*~QM', 'KLAP~*~*~*~QM', 'KNOT~*~*~*~QM', 'PGRP~*~*~*~QM', 'PUMP~*~*~*~QM', 'ROHR~*~*~*~QMAV', 'VENT~*~*~*~QM']
2024-08-06 09:31:09,411 ; PT3S                                                         ; DEBUG   ; Mx.getVecAggsResultsForAttributeType: choosen Name of 'common' ATTR: QM.
2024-08-06 09:31:09,447 ; PT3S                                                         ; DEBUG   ; Mx.getVecAggsResultsForAttributeType: _Done.
2024-08-06 09:31:09,459 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,459 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type FWES: adding Vec-Results failed.
2024-08-06 09:31:09,466 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,466 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type FWVB: adding Vec-Results failed.
2024-08-06 09:31:09,480 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,480 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type KLAP: adding Vec-Results failed.
2024-08-06 09:31:09,482 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,482 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type PGRP: adding Vec-Results failed.
2024-08-06 09:31:09,498 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,498 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type PUMP: adding Vec-Results failed.
2024-08-06 09:31:09,511 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,511 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type ROHR: adding Vec-Results failed.
2024-08-06 09:31:09,514 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.constructNewMultiindexFromCols: Exception: Line: 1917: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist'
2024-08-06 09:31:09,514 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: Exception: Line: 1452: <class 'AttributeError'>: 'DataFrame' object has no attribute 'tolist': Edge-Type VENT: adding Vec-Results failed.
2024-08-06 09:31:09,545 ; PT3S                                                         ; DEBUG   ; Dx.MxAdd: _Done.
2024-08-06 09:31:09,546 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Exception: Line: 123: <class 'KeyError'>: ('STAT', 'QM', Timestamp('2023-02-12 23:00:00'), Timestamp('2023-02-12 23:00:00'))
2024-08-06 09:31:09,546 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing col QM in V3_VBEL failed.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['PH_i'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['PH_k'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['T_i'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['T_k'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['H_i'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['H_k'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['RHO_i'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['RHO_k'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['mlc_i'] ok so far.
2024-08-06 09:31:09,548 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_VBEL['mlc_k'] ok so far.
2024-08-06 09:31:09,564 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_ROHR['QMAVAbs'] ok so far.
2024-08-06 09:31:09,575 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_ROHR['VAVAbs'] ok so far.
2024-08-06 09:31:09,580 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_ROHR['PHRAbs'] ok so far.
2024-08-06 09:31:09,596 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_ROHR['JVAbs'] ok so far.
2024-08-06 09:31:09,596 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_ROHRVEC: Start.
2024-08-06 09:31:09,754 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_ROHRVEC: _Done.
2024-08-06 09:31:09,754 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_ROHRVEC ok so far.
2024-08-06 09:31:09,755 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_FWVB['W'] ok so far.
2024-08-06 09:31:09,755 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_FWVB['QM'] ok so far.
2024-08-06 09:31:09,756 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_FWVB['TI'] ok so far.
2024-08-06 09:31:09,757 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of V3_FWVB['TK'] ok so far.
2024-08-06 09:31:09,763 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Adding MX-Results to V3_WBLZ ok so far.
2024-08-06 09:31:09,763 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: crs reading successful:  EPSG:25832
2024-08-06 09:31:09,802 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing of gdf_FWVB and gdf_ROHR ok so far.
2024-08-06 09:31:10,282 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing NetworkX Graph G ok so far.
2024-08-06 09:31:10,312 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing NetworkX Graph G nodeposDctNx ok so far.
2024-08-06 09:31:10,330 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: Constructing NetworkX Graph GSig ok so far.
2024-08-06 09:31:10,330 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_AGSN: Start.
2024-08-06 09:31:15,299 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_AGSN: _Done.
2024-08-06 09:31:15,299 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_AGSNVEC: Start.
2024-08-06 09:31:15,892 ; PT3S                                                         ; DEBUG   ; dxWithMx._V3_AGSNVEC: _Done.
2024-08-06 09:31:15,892 ; PT3S                                                         ; DEBUG   ; dxWithMx.__init__: _Done.
2024-08-06 09:31:15,892 ; PT3S                                                         ; DEBUG   ; dxAndMxHelperFcts.readDxAndMx: _Done.
2024-08-06 09:31:16,031 ; matplotlib.pyplot                                            ; DEBUG   ; Loaded backend module://matplotlib_inline.backend_inline version unknown.
2024-08-06 09:31:16,031 ; matplotlib.pyplot                                            ; DEBUG   ; Loaded backend module://matplotlib_inline.backend_inline version unknown.
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-08-06 09:31:16,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchbi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscki.ttf', name='Swis721 BlkCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMGDT___.ttf', name='AMGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techl___.ttf', name='TechnicLite', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\umath.ttf', name='UniversalMath1 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,049 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-08-06 09:31:16,049 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,049 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romand__.ttf', name='RomanD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurro___.ttf', name='EuroRoman', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct2__.ttf', name='ISOCT2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothici_.ttf', name='GothicI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothl.ttf', name='BankGothic Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissck.ttf', name='Swis721 BlkCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italict_.ttf', name='ItalicT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium.ttf', name='Artifakt Element', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMDT_Symbols.ttf', name='AmdtSymbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AcadEref.ttf', name='AcadEref', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book.ttf', name='Artifakt Element', style='normal', variant='normal', weight=450, stretch='normal', size='scalable')) = 10.0975
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gdt_____.ttf', name='GDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothicg_.ttf', name='GothicG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scriptc_.ttf', name='ScriptC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,050 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comsc.ttf', name='CommercialScript BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanss___.ttf', name='SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy9.ttf', name='Proxy 9', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeui.ttf', name='ISOCPEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosb.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,056 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp___.ttf', name='ISOCP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy7.ttf', name='Proxy 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,059 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchb.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,060 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,060 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,060 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\vinet.ttf', name='Vineta BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,061 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissb.ttf', name='Swis721 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\txt_____.ttf', name='Txt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\technic_.ttf', name='Technic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,062 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symap___.ttf', name='Symap', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,063 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissk.ttf', name='Swis721 Blk BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothm.ttf', name='BankGothic Md BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,064 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,065 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romanc__.ttf', name='RomanC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,066 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greekc__.ttf', name='GreekC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romans__.ttf', name='RomanS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,067 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swiss.ttf', name='Swis721 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,068 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\compi.ttf', name='CommercialPi BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,069 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element LIght.ttf', name='Artifakt Element', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2024-08-06 09:31:16,070 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italic__.ttf', name='Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,071 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,072 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,073 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sansso__.ttf', name='SansSerif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,074 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\stylu.ttf', name='Stylus BT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,075 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,076 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy3.ttf', name='Proxy 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothice_.ttf', name='GothicE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy.ttf', name='Artifakt Element', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutcheb.ttf', name='Dutch801 XBd BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,077 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symusic_.ttf', name='Symusic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greeks__.ttf', name='GreekS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,078 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisse.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-08-06 09:31:16,079 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=450, stretch='normal', size='scalable')) = 11.0975
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,080 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monos.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissc.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisski.ttf', name='Swis721 Blk BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,081 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbi.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-08-06 09:31:16,082 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black.ttf', name='Artifakt Element', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,083 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scripts_.ttf', name='ScriptS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy4.ttf', name='Proxy 4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\supef___.ttf', name='SuperFrench', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,084 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monotxt_.ttf', name='Monotxt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romab___.ttf', name='Romantic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,085 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct___.ttf', name='ISOCT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KievitOffcPro.ttf', name='Kievit Offc Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurr____.ttf', name='EuroRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosbi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,086 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscli.ttf', name='Swis721 LtCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair.ttf', name='Artifakt Element', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp3__.ttf', name='ISOCP3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,087 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\panroman.ttf', name='PanRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\syastro_.ttf', name='Syastro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssb__.ttf', name='SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,088 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symath__.ttf', name='Symath', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy2.ttf', name='Proxy 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,089 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisseb.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=700, stretch='expanded', size='scalable')) = 10.535
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,090 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,091 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,091 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-08-06 09:31:16,092 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simplex_.ttf', name='Simplex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,092 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,092 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\counb___.ttf', name='CountryBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,092 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romai___.ttf', name='Romantic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp2__.ttf', name='ISOCP2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscl.ttf', name='Swis721 LtCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteur.ttf', name='ISOCTEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissli.ttf', name='Swis721 Lt BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symeteo_.ttf', name='Symeteo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy1.ttf', name='Proxy 1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy5.ttf', name='Proxy 5', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romantic.ttf', name='Romantic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissel.ttf', name='Swis721 LtEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteui.ttf', name='ISOCTEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssbo_.ttf', name='SansSerif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbo.ttf', name='Swis721 BdCnOul BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,093 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissl.ttf', name='Swis721 Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy8.ttf', name='Proxy 8', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy6.ttf', name='Proxy 6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AIGDT___.TTF', name='AIGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techb___.ttf', name='TechnicBold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissek.ttf', name='Swis721 BlkEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutch.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissko.ttf', name='Swis721 BlkOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Light Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GENISO.ttf', name='GENISO', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romant__.ttf', name='RomanT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\complex_.ttf', name='Complex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italicc_.ttf', name='ItalicC', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,101 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeur.ttf', name='ISOCPEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscb.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,108 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct3__.ttf', name='ISOCT3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALUNI.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissci.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin.ttf', name='Artifakt Element', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,110 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cityb___.ttf', name='CityBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,111 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,112 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbo.ttf', name='Swis721 BdOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-08-06 09:31:16,114 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
