2024-05-31 12:05:01,255 ; matplotlib.pyplot                                            ; DEBUG   ; Loaded backend module://matplotlib_inline.backend_inline version unknown.
2024-05-31 12:05:01,256 ; matplotlib.pyplot                                            ; DEBUG   ; Loaded backend module://matplotlib_inline.backend_inline version unknown.
2024-05-31 12:06:47,894 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2024-05-31 12:06:47,896 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,896 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,897 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,897 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,898 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,898 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,898 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,899 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,899 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,899 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,899 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,899 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,900 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-05-31 12:06:47,900 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,900 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,900 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,901 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-05-31 12:06:47,901 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,901 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,901 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-05-31 12:06:47,902 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,903 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,903 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,903 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-05-31 12:06:47,903 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,903 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,904 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,904 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,904 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,904 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,904 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,905 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,905 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,905 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,905 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,905 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,906 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchbi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,906 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,906 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,906 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscki.ttf', name='Swis721 BlkCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:06:47,906 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMGDT___.ttf', name='AMGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,907 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,908 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techl___.ttf', name='TechnicLite', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,908 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,908 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,908 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2024-05-31 12:06:47,908 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\umath.ttf', name='UniversalMath1 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,909 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,910 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:06:47,910 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,910 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,910 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romand__.ttf', name='RomanD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,911 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurro___.ttf', name='EuroRoman', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct2__.ttf', name='ISOCT2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothici_.ttf', name='GothicI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothl.ttf', name='BankGothic Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,912 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,913 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,913 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,913 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,913 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissck.ttf', name='Swis721 BlkCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italict_.ttf', name='ItalicT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium.ttf', name='Artifakt Element', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,914 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMDT_Symbols.ttf', name='AmdtSymbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AcadEref.ttf', name='AcadEref', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book.ttf', name='Artifakt Element', style='normal', variant='normal', weight=450, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:06:47,915 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gdt_____.ttf', name='GDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothicg_.ttf', name='GothicG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scriptc_.ttf', name='ScriptC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,916 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comsc.ttf', name='CommercialScript BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanss___.ttf', name='SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy9.ttf', name='Proxy 9', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,917 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeui.ttf', name='ISOCPEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,918 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosb.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,919 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp___.ttf', name='ISOCP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy7.ttf', name='Proxy 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,920 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchb.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,921 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\vinet.ttf', name='Vineta BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissb.ttf', name='Swis721 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\txt_____.ttf', name='Txt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\technic_.ttf', name='Technic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-05-31 12:06:47,922 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,923 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,923 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,923 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,923 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symap___.ttf', name='Symap', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,923 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissk.ttf', name='Swis721 Blk BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,924 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothm.ttf', name='BankGothic Md BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,925 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romanc__.ttf', name='RomanC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,926 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,928 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,928 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greekc__.ttf', name='GreekC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,928 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romans__.ttf', name='RomanS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,928 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,929 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,929 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swiss.ttf', name='Swis721 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,929 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2024-05-31 12:06:47,929 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2024-05-31 12:06:47,929 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\compi.ttf', name='CommercialPi BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,930 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element LIght.ttf', name='Artifakt Element', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,931 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2024-05-31 12:06:47,932 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,932 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2024-05-31 12:06:47,932 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,932 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2024-05-31 12:06:47,932 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italic__.ttf', name='Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,933 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,934 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sansso__.ttf', name='SansSerif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,935 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\stylu.ttf', name='Stylus BT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,936 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy3.ttf', name='Proxy 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothice_.ttf', name='GothicE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,937 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy.ttf', name='Artifakt Element', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutcheb.ttf', name='Dutch801 XBd BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symusic_.ttf', name='Symusic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greeks__.ttf', name='GreekS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,938 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisse.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=450, stretch='normal', size='scalable')) = 11.0975
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,939 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monos.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissc.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisski.ttf', name='Swis721 Blk BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,941 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,942 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,942 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbi.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-05-31 12:06:47,942 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:06:47,942 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black.ttf', name='Artifakt Element', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,943 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scripts_.ttf', name='ScriptS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy4.ttf', name='Proxy 4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\supef___.ttf', name='SuperFrench', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,944 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monotxt_.ttf', name='Monotxt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romab___.ttf', name='Romantic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,945 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct___.ttf', name='ISOCT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KievitOffcPro.ttf', name='Kievit Offc Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurr____.ttf', name='EuroRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosbi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,946 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscli.ttf', name='Swis721 LtCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,947 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair.ttf', name='Artifakt Element', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp3__.ttf', name='ISOCP3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\panroman.ttf', name='PanRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\syastro_.ttf', name='Syastro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssb__.ttf', name='SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symath__.ttf', name='Symath', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,948 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy2.ttf', name='Proxy 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisseb.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=700, stretch='expanded', size='scalable')) = 10.535
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,949 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simplex_.ttf', name='Simplex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,950 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\counb___.ttf', name='CountryBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romai___.ttf', name='Romantic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp2__.ttf', name='ISOCP2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscl.ttf', name='Swis721 LtCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,951 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteur.ttf', name='ISOCTEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,952 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissli.ttf', name='Swis721 Lt BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symeteo_.ttf', name='Symeteo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy1.ttf', name='Proxy 1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,953 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy5.ttf', name='Proxy 5', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romantic.ttf', name='Romantic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissel.ttf', name='Swis721 LtEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,954 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteui.ttf', name='ISOCTEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssbo_.ttf', name='SansSerif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,955 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbo.ttf', name='Swis721 BdCnOul BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissl.ttf', name='Swis721 Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,956 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy8.ttf', name='Proxy 8', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy6.ttf', name='Proxy 6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AIGDT___.TTF', name='AIGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techb___.ttf', name='TechnicBold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,958 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissek.ttf', name='Swis721 BlkEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutch.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissko.ttf', name='Swis721 BlkOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Light Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GENISO.ttf', name='GENISO', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romant__.ttf', name='RomanT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,959 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,960 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-05-31 12:06:47,960 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,960 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\complex_.ttf', name='Complex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italicc_.ttf', name='ItalicC', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,961 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,962 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeur.ttf', name='ISOCPEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,963 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,963 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscb.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:06:47,963 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,963 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,963 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct3__.ttf', name='ISOCT3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALUNI.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissci.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin.ttf', name='Artifakt Element', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,964 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,965 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,965 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,965 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cityb___.ttf', name='CityBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:06:47,966 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,967 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbo.ttf', name='Swis721 BdOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:06:47,968 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:06:47,968 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:06:47,968 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2024-05-31 12:16:35,776 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:16:35,778 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:22:40,917 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:25:37,015 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:27:04,098 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:27:04,098 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:27:04,098 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:27:04,098 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:27:04,098 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:27:04,099 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:27:04,099 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:27:04,099 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:27:04,099 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:27:04,139 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:27:49,471 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:27:49,471 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:27:49,471 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:27:49,471 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:27:49,471 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:27:49,472 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:27:49,472 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:27:49,472 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:27:49,472 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:27:49,501 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:28:09,878 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:28:09,879 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:28:09,907 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,976 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,977 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,978 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-05-31 12:28:09,979 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,980 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,981 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,982 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,982 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,982 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchbi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,982 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscki.ttf', name='Swis721 BlkCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMGDT___.ttf', name='AMGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,983 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techl___.ttf', name='TechnicLite', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2024-05-31 12:28:09,984 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\umath.ttf', name='UniversalMath1 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,985 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,986 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romand__.ttf', name='RomanD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurro___.ttf', name='EuroRoman', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct2__.ttf', name='ISOCT2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,987 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothici_.ttf', name='GothicI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothl.ttf', name='BankGothic Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,988 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissck.ttf', name='Swis721 BlkCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italict_.ttf', name='ItalicT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Medium.ttf', name='Artifakt Element', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,989 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AMDT_Symbols.ttf', name='AmdtSymbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AcadEref.ttf', name='AcadEref', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book.ttf', name='Artifakt Element', style='normal', variant='normal', weight=450, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:28:09,990 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gdt_____.ttf', name='GDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothicg_.ttf', name='GothicG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scriptc_.ttf', name='ScriptC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comsc.ttf', name='CommercialScript BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,991 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanss___.ttf', name='SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy9.ttf', name='Proxy 9', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,993 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeui.ttf', name='ISOCPEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosb.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,994 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp___.ttf', name='ISOCP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,995 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy7.ttf', name='Proxy 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchb.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,996 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\vinet.ttf', name='Vineta BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,997 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissb.ttf', name='Swis721 BT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\txt_____.ttf', name='Txt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\technic_.ttf', name='Technic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,998 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symap___.ttf', name='Symap', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:09,999 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissk.ttf', name='Swis721 Blk BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bgothm.ttf', name='BankGothic Md BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,000 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romanc__.ttf', name='RomanC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,001 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbi.ttf', name='Swis721 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,002 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greekc__.ttf', name='GreekC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romans__.ttf', name='RomanS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swiss.ttf', name='Swis721 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2024-05-31 12:28:10,003 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\compi.ttf', name='CommercialPi BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,004 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutchi.ttf', name='Dutch801 Rm BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element LIght.ttf', name='Artifakt Element', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,005 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italic__.ttf', name='Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,006 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,007 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sansso__.ttf', name='SansSerif', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,009 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,010 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,010 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,010 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,010 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\stylu.ttf', name='Stylus BT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,011 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy3.ttf', name='Proxy 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gothice_.ttf', name='GothicE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Heavy.ttf', name='Artifakt Element', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:28:10,012 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutcheb.ttf', name='Dutch801 XBd BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symusic_.ttf', name='Symusic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,013 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\greeks__.ttf', name='GreekS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,014 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,014 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,014 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,014 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,014 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisse.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,015 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Book Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=450, stretch='normal', size='scalable')) = 11.0975
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monos.ttf', name='Monospac821 BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,016 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissc.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisski.ttf', name='Swis721 Blk BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,017 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbi.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Black.ttf', name='Artifakt Element', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,018 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\scripts_.ttf', name='ScriptS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy4.ttf', name='Proxy 4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:28:10,019 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\supef___.ttf', name='SuperFrench', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monotxt_.ttf', name='Monotxt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romab___.ttf', name='Romantic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct___.ttf', name='ISOCT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,020 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KievitOffcPro.ttf', name='Kievit Offc Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eurr____.ttf', name='EuroRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monosbi.ttf', name='Monospac821 BT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscli.ttf', name='Swis721 LtCn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,021 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Hair.ttf', name='Artifakt Element', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp3__.ttf', name='ISOCP3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\panroman.ttf', name='PanRoman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\syastro_.ttf', name='Syastro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssb__.ttf', name='SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,022 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symath__.ttf', name='Symath', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy2.ttf', name='Proxy 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,023 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisseb.ttf', name='Swis721 Ex BT', style='normal', variant='normal', weight=700, stretch='expanded', size='scalable')) = 10.535
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simplex_.ttf', name='Simplex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\counb___.ttf', name='CountryBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,024 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romai___.ttf', name='Romantic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocp2__.ttf', name='ISOCP2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscl.ttf', name='Swis721 LtCn BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,026 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteur.ttf', name='ISOCTEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,027 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissli.ttf', name='Swis721 Lt BT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symeteo_.ttf', name='Symeteo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,028 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy1.ttf', name='Proxy 1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy5.ttf', name='Proxy 5', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romantic.ttf', name='Romantic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,029 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissel.ttf', name='Swis721 LtEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-05-31 12:28:10,030 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocteui.ttf', name='ISOCTEUR', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sanssbo_.ttf', name='SansSerif', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,031 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscbo.ttf', name='Swis721 BdCnOul BT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissl.ttf', name='Swis721 Lt BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,032 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy8.ttf', name='Proxy 8', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mtproxy6.ttf', name='Proxy 6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:28:10,033 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AIGDT___.TTF', name='AIGDT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\techb___.ttf', name='TechnicBold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissek.ttf', name='Swis721 BlkEx BT', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:28:10,034 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\dutch.ttf', name='Dutch801 Rm BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissko.ttf', name='Swis721 BlkOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Light Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GENISO.ttf', name='GENISO', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,035 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\romant__.ttf', name='RomanT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\complex_.ttf', name='Complex', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-05-31 12:28:10,036 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\italicc_.ttf', name='ItalicC', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,037 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,038 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isocpeur.ttf', name='ISOCPEUR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swisscb.ttf', name='Swis721 Cn BT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\isoct3__.ttf', name='ISOCT3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALUNI.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissci.ttf', name='Swis721 Cn BT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-05-31 12:28:10,039 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin.ttf', name='Artifakt Element', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Thin Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,040 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cityb___.ttf', name='CityBlueprint', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,041 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,042 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-05-31 12:28:10,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-05-31 12:28:10,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,043 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\swissbo.ttf', name='Swis721 BdOul BT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-05-31 12:28:10,044 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-05-31 12:28:10,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-05-31 12:28:10,045 ; matplotlib.font_manager                                      ; DEBUG   ; findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\jablonski\\AppData\\Local\\anaconda3\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:28:53,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:28:53,143 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:36:31,322 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:36:31,323 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:36:31,333 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:36:49,453 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:36:49,453 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:36:49,453 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:36:49,454 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:36:49,464 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:36:59,651 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:36:59,651 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:36:59,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:36:59,653 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:36:59,661 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:37:50,437 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:37:50,440 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:37:50,442 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:37:50,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:37:50,473 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:39:24,057 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:39:24,060 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:39:24,062 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:39:24,062 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:39:24,063 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:39:24,093 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:40:46,654 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:46,657 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:46,658 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:40:46,659 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:40:46,659 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:40:46,659 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:40:46,660 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:40:46,660 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:40:46,660 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:40:46,660 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:40:46,660 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:40:46,664 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:40:52,611 ; Comm                                                         ; DEBUG   ; handle_msg[0de0a690cc0e4fa185f584d46ae67700]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 52, 609000, tzinfo=tzutc()), 'msg_id': '1afc3b22-8b25-4ff7-a3fe-1dc6c702f21a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '1afc3b22-8b25-4ff7-a3fe-1dc6c702f21a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '0de0a690cc0e4fa185f584d46ae67700', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:53,087 ; Comm                                                         ; DEBUG   ; handle_msg[db92faf40ce340ecbdd52a5366930c18]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 53, 85000, tzinfo=tzutc()), 'msg_id': 'f0ce7305-8e21-4a6d-958a-0826ec33a37f', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'f0ce7305-8e21-4a6d-958a-0826ec33a37f', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'db92faf40ce340ecbdd52a5366930c18', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:53,481 ; Comm                                                         ; DEBUG   ; handle_msg[4885b7911a7c4e24be01626a4bf967b9]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 53, 478000, tzinfo=tzutc()), 'msg_id': '81fdc338-e43d-4f72-aafd-b9592fec3855', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '81fdc338-e43d-4f72-aafd-b9592fec3855', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '4885b7911a7c4e24be01626a4bf967b9', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:54,118 ; Comm                                                         ; DEBUG   ; handle_msg[eaa0dbbbda3249d1b31f838a05369c8d]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 54, 115000, tzinfo=tzutc()), 'msg_id': 'd03e51e8-26b5-4949-b370-04419a1dee4a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'd03e51e8-26b5-4949-b370-04419a1dee4a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'eaa0dbbbda3249d1b31f838a05369c8d', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:40:54,228 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:40:54,229 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:40:54,229 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:40:54,233 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:40:54,843 ; Comm                                                         ; DEBUG   ; handle_msg[ccf6ff490baa420d939a67e0cf152cf7]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 54, 839000, tzinfo=tzutc()), 'msg_id': '60a0e7aa-b3de-4a0f-a1d2-0e61dce7db17', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '60a0e7aa-b3de-4a0f-a1d2-0e61dce7db17', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'ccf6ff490baa420d939a67e0cf152cf7', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:40:54,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:40:54,913 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:40:54,913 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:40:54,918 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:40:55,349 ; Comm                                                         ; DEBUG   ; handle_msg[eaa0dbbbda3249d1b31f838a05369c8d]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 55, 346000, tzinfo=tzutc()), 'msg_id': 'fc635208-d412-4341-9a31-f636cdcab1cd', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'fc635208-d412-4341-9a31-f636cdcab1cd', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'eaa0dbbbda3249d1b31f838a05369c8d', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:55,437 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:55,440 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:55,443 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:40:55,444 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:40:55,449 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:40:55,696 ; Comm                                                         ; DEBUG   ; handle_msg[ccf6ff490baa420d939a67e0cf152cf7]({'header': {'date': datetime.datetime(2024, 5, 31, 10, 40, 55, 640000, tzinfo=tzutc()), 'msg_id': '345c58d4-b148-4b66-a8ad-ef328146987a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '345c58d4-b148-4b66-a8ad-ef328146987a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'ccf6ff490baa420d939a67e0cf152cf7', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 12:40:55,833 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:55,835 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:40:55,837 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:40:55,837 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:40:55,838 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:40:55,842 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:48:40,228 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:48:40,233 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:48:40,238 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:48:40,238 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:48:40,238 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:48:40,238 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:48:40,238 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:48:40,239 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:48:40,239 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:48:40,239 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:48:40,239 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:48:40,287 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:50:58,040 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:50:58,044 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:50:58,046 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:50:58,047 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:50:58,047 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:50:58,047 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:50:58,047 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:50:58,047 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:50:58,049 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:50:58,049 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:50:58,049 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:50:58,084 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:51:06,082 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:06,085 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:51:06,088 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:51:06,090 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:51:06,090 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:51:06,140 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:51:16,019 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:16,026 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:16,031 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:51:16,031 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:51:16,031 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:51:16,033 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:51:16,033 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:51:16,033 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:51:16,033 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:51:16,034 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:51:16,034 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:51:16,125 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:51:54,385 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:54,391 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:51:54,394 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:51:54,394 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:51:54,395 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:51:54,395 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:51:54,396 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:51:54,396 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:51:54,396 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:51:54,397 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:51:54,397 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:51:54,449 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:53:02,833 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:53:02,836 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:53:02,840 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:53:02,841 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:53:02,841 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:53:02,878 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:53:56,878 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:53:56,881 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:53:56,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:53:56,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:53:56,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:53:56,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:53:56,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:53:56,885 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:53:56,885 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:53:56,885 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:53:56,885 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:53:56,919 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 12:54:11,733 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:54:11,736 ; matplotlib.category                                          ; INFO    ; Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2024-05-31 12:54:11,739 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 12:54:11,739 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 12:54:11,739 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 12:54:11,740 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 12:54:11,776 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:02:24,389 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:02:24,390 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:02:24,390 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:02:24,425 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:02:25,242 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:02:25,243 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:02:25,248 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:06,651 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:06,652 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:06,658 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:09,132 ; Comm                                                         ; DEBUG   ; handle_msg[b242fd611ce44e5a928dee87ac81dd5c]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 9, 130000, tzinfo=tzutc()), 'msg_id': '17dcca1c-8fc8-493f-8093-63587ac827b4', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '17dcca1c-8fc8-493f-8093-63587ac827b4', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'b242fd611ce44e5a928dee87ac81dd5c', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:09,245 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:09,245 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:09,246 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:09,246 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:09,246 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:09,246 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:09,246 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:09,247 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:09,247 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:09,253 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:09,656 ; Comm                                                         ; DEBUG   ; handle_msg[b242fd611ce44e5a928dee87ac81dd5c]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 9, 654000, tzinfo=tzutc()), 'msg_id': 'bd681df0-ae87-431e-a2f5-2d3387600983', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'bd681df0-ae87-431e-a2f5-2d3387600983', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'b242fd611ce44e5a928dee87ac81dd5c', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:09,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:09,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:09,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:09,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:09,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:09,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:09,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:09,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:09,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:09,796 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:10,182 ; Comm                                                         ; DEBUG   ; handle_msg[ca6d1e43e88e4423a8331e48eed773c8]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 9, 949000, tzinfo=tzutc()), 'msg_id': 'f8d48858-20b9-4e13-97bc-2247bbc8b160', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'f8d48858-20b9-4e13-97bc-2247bbc8b160', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'ca6d1e43e88e4423a8331e48eed773c8', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:10,257 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:10,258 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:10,263 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:10,496 ; Comm                                                         ; DEBUG   ; handle_msg[ca6d1e43e88e4423a8331e48eed773c8]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 10, 494000, tzinfo=tzutc()), 'msg_id': 'f7a4fb0b-7af3-46bb-af73-3294c678e45f', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'f7a4fb0b-7af3-46bb-af73-3294c678e45f', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'ca6d1e43e88e4423a8331e48eed773c8', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:10,617 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:10,617 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:10,617 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:10,617 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:10,617 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:10,619 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:10,619 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:10,619 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:10,619 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:10,622 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:03:10,985 ; Comm                                                         ; DEBUG   ; handle_msg[76163950dc0c45b2b811f1bb580bd250]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 10, 843000, tzinfo=tzutc()), 'msg_id': 'c257fc3b-6879-4544-8e45-36e03e4311f3', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'c257fc3b-6879-4544-8e45-36e03e4311f3', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '76163950dc0c45b2b811f1bb580bd250', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:11,116 ; Comm                                                         ; DEBUG   ; handle_msg[507664b77e03405e8111a6faf895dc23]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 11, 113000, tzinfo=tzutc()), 'msg_id': '6b3ec27c-00e2-48d2-962a-d402cb07fa4d', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '6b3ec27c-00e2-48d2-962a-d402cb07fa4d', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '507664b77e03405e8111a6faf895dc23', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:11,399 ; Comm                                                         ; DEBUG   ; handle_msg[507664b77e03405e8111a6faf895dc23]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 11, 397000, tzinfo=tzutc()), 'msg_id': '3cccfac9-9ad7-4a29-829e-23c7e5700153', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '3cccfac9-9ad7-4a29-829e-23c7e5700153', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '507664b77e03405e8111a6faf895dc23', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:11,661 ; Comm                                                         ; DEBUG   ; handle_msg[76163950dc0c45b2b811f1bb580bd250]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 3, 11, 658000, tzinfo=tzutc()), 'msg_id': '97fec9dd-ebf5-4196-84e9-bd2f33bf81ac', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '97fec9dd-ebf5-4196-84e9-bd2f33bf81ac', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '76163950dc0c45b2b811f1bb580bd250', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:03:41,591 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:03:41,592 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:03:41,627 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:04:03,883 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:04:03,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:04:03,884 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:04:03,933 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:06:40,887 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:06:40,888 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:06:40,888 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:06:40,920 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:07:00,250 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:07:00,250 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:07:00,250 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:07:00,250 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:07:00,251 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:07:00,251 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:07:00,251 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:07:00,251 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:07:00,251 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:07:00,294 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:07:01,074 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:07:01,075 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:07:01,080 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:07:25,817 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:07:25,818 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:07:25,818 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:07:25,818 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:07:25,818 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:07:25,818 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:07:25,819 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:07:25,819 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:07:25,819 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:07:25,825 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:07:30,126 ; Comm                                                         ; DEBUG   ; handle_msg[3274f6c0b66f471f96c1b124c9103278]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 7, 30, 123000, tzinfo=tzutc()), 'msg_id': 'b28bd4f5-f1ab-4003-8713-c5fa6e90ca6d', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'b28bd4f5-f1ab-4003-8713-c5fa6e90ca6d', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '3274f6c0b66f471f96c1b124c9103278', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:07:30,382 ; Comm                                                         ; DEBUG   ; handle_msg[3274f6c0b66f471f96c1b124c9103278]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 7, 30, 379000, tzinfo=tzutc()), 'msg_id': '7bd829ad-9351-4c90-9a81-08d8fb75957a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '7bd829ad-9351-4c90-9a81-08d8fb75957a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '3274f6c0b66f471f96c1b124c9103278', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:07,457 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:07,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:07,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:07,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:07,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:07,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:07,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:07,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:07,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:07,464 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:09,881 ; Comm                                                         ; DEBUG   ; handle_msg[9fab7cb1ad9d4072bb1ada717037dabd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 9, 878000, tzinfo=tzutc()), 'msg_id': 'f950689c-293e-4b27-bd08-4628aeffdd3d', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'f950689c-293e-4b27-bd08-4628aeffdd3d', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '9fab7cb1ad9d4072bb1ada717037dabd', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:10,004 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:10,005 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:10,006 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:10,009 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:10,349 ; Comm                                                         ; DEBUG   ; handle_msg[9fab7cb1ad9d4072bb1ada717037dabd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 10, 347000, tzinfo=tzutc()), 'msg_id': '17e2f5ce-0e94-4f84-bcf4-6725ad1659fa', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '17e2f5ce-0e94-4f84-bcf4-6725ad1659fa', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '9fab7cb1ad9d4072bb1ada717037dabd', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:10,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:10,460 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:10,461 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:10,461 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:10,466 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:10,801 ; Comm                                                         ; DEBUG   ; handle_msg[31d00942f6144b8da677c78ef6599e1f]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 10, 530000, tzinfo=tzutc()), 'msg_id': '405ebc36-2b67-4aeb-9c3f-e9019d99679c', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '405ebc36-2b67-4aeb-9c3f-e9019d99679c', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '31d00942f6144b8da677c78ef6599e1f', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:10,912 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:10,913 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:10,913 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:10,914 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:10,914 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:10,914 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:10,914 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:10,915 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:10,915 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:10,920 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:11,788 ; Comm                                                         ; DEBUG   ; handle_msg[d56bd477c80244a5857b2681d410f3fd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 10, 913000, tzinfo=tzutc()), 'msg_id': '6e4328ba-6597-40a1-a5e5-814f273f46ff', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '6e4328ba-6597-40a1-a5e5-814f273f46ff', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'd56bd477c80244a5857b2681d410f3fd', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:11,901 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:11,902 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:11,902 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:11,902 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:11,906 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:12,236 ; Comm                                                         ; DEBUG   ; handle_msg[31d00942f6144b8da677c78ef6599e1f]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 11, 791000, tzinfo=tzutc()), 'msg_id': '99378de4-b017-48e4-92c4-17219607da65', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '99378de4-b017-48e4-92c4-17219607da65', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '31d00942f6144b8da677c78ef6599e1f', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:12,329 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:12,329 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:12,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:12,335 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:12,673 ; Comm                                                         ; DEBUG   ; handle_msg[9fab7cb1ad9d4072bb1ada717037dabd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 11, 918000, tzinfo=tzutc()), 'msg_id': '72c83335-bc83-47c8-995b-af674611c8bb', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '72c83335-bc83-47c8-995b-af674611c8bb', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '9fab7cb1ad9d4072bb1ada717037dabd', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:12,777 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:12,778 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:12,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:13,099 ; Comm                                                         ; DEBUG   ; handle_msg[d56bd477c80244a5857b2681d410f3fd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 12, 392000, tzinfo=tzutc()), 'msg_id': '80d19e65-61cf-4565-9dc6-c1cd16f91822', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '80d19e65-61cf-4565-9dc6-c1cd16f91822', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'd56bd477c80244a5857b2681d410f3fd', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:13,188 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:13,189 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:13,189 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:13,192 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:13,589 ; Comm                                                         ; DEBUG   ; handle_msg[31d00942f6144b8da677c78ef6599e1f]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 12, 675000, tzinfo=tzutc()), 'msg_id': 'a133ba1c-5dd5-492e-8350-a851d6dc8700', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'a133ba1c-5dd5-492e-8350-a851d6dc8700', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '31d00942f6144b8da677c78ef6599e1f', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:13,709 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:13,710 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:13,715 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:14,013 ; Comm                                                         ; DEBUG   ; handle_msg[9fab7cb1ad9d4072bb1ada717037dabd]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 13, 99000, tzinfo=tzutc()), 'msg_id': '49139388-3992-4b04-8f6b-9635cf0a6632', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '49139388-3992-4b04-8f6b-9635cf0a6632', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '9fab7cb1ad9d4072bb1ada717037dabd', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:14,120 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:14,120 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:14,121 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:14,126 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:10:14,455 ; Comm                                                         ; DEBUG   ; handle_msg[31d00942f6144b8da677c78ef6599e1f]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 10, 14, 16000, tzinfo=tzutc()), 'msg_id': '4281f8e1-546d-4c2a-bb23-e003acf46e9a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '4281f8e1-546d-4c2a-bb23-e003acf46e9a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '31d00942f6144b8da677c78ef6599e1f', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:10:14,570 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:10:14,571 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:10:14,575 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:13:26,780 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:13:26,781 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:13:26,807 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:13:37,743 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:13:37,743 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:13:37,743 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:13:37,744 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:13:37,770 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:13:44,080 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:13:44,080 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:13:44,080 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:13:44,081 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:13:44,109 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:13:53,070 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:13:53,071 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:13:53,072 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:13:53,107 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:14,578 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:14,578 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:14,578 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:14,578 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:14,578 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:14,579 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:14,579 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:14,579 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:14,579 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:14,584 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:31,678 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 31, 675000, tzinfo=tzutc()), 'msg_id': 'e9a921eb-80dd-4455-8874-c9879f858c50', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'e9a921eb-80dd-4455-8874-c9879f858c50', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:31,791 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:31,792 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:31,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:31,793 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:31,797 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:32,626 ; Comm                                                         ; DEBUG   ; handle_msg[1700a671d54c4a0ebdc9b12ca8167ae7]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 32, 624000, tzinfo=tzutc()), 'msg_id': '604117d4-caa8-49f1-a74c-3d2a09fe627c', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '604117d4-caa8-49f1-a74c-3d2a09fe627c', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '1700a671d54c4a0ebdc9b12ca8167ae7', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:32,734 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:32,735 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:32,736 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:32,741 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:33,062 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 32, 836000, tzinfo=tzutc()), 'msg_id': '1d583c42-ab34-44ee-9eab-e6da0021e7be', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '1d583c42-ab34-44ee-9eab-e6da0021e7be', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:33,150 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:33,151 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:33,151 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:33,151 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:33,155 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:33,434 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 33, 105000, tzinfo=tzutc()), 'msg_id': 'b7ae9441-6e2f-4852-8476-0cf50139419d', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'b7ae9441-6e2f-4852-8476-0cf50139419d', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:33,550 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:33,551 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:33,556 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:33,901 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 33, 434000, tzinfo=tzutc()), 'msg_id': '98c1d9ae-f75b-4bc2-9408-3283bf8fab77', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '98c1d9ae-f75b-4bc2-9408-3283bf8fab77', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:33,995 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:33,996 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:33,996 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:33,996 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:33,996 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:33,996 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:33,997 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:33,997 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:33,997 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:34,001 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:17:34,333 ; Comm                                                         ; DEBUG   ; handle_msg[1700a671d54c4a0ebdc9b12ca8167ae7]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 17, 33, 551000, tzinfo=tzutc()), 'msg_id': '37db241e-a9fd-4192-ad7d-2ac5752037cb', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '37db241e-a9fd-4192-ad7d-2ac5752037cb', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '1700a671d54c4a0ebdc9b12ca8167ae7', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:17:34,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:17:34,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:17:34,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:17:34,458 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:17:34,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:17:34,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:17:34,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:17:34,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:17:34,459 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:17:34,463 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:23:15,291 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:23:15,291 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:23:15,291 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:23:15,293 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:23:15,330 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:25:15,957 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:25:15,993 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:27:54,921 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:27:54,922 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:27:54,953 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:28:25,339 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 25, 337000, tzinfo=tzutc()), 'msg_id': 'f3989f82-e9a4-4bd4-85e1-bdc968c57ffb', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'f3989f82-e9a4-4bd4-85e1-bdc968c57ffb', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:26,328 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 25, 674000, tzinfo=tzutc()), 'msg_id': '8ab49947-e4f8-4982-afd5-06fa6917d6e6', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '8ab49947-e4f8-4982-afd5-06fa6917d6e6', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:26,579 ; Comm                                                         ; DEBUG   ; handle_msg[1700a671d54c4a0ebdc9b12ca8167ae7]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 25, 967000, tzinfo=tzutc()), 'msg_id': '76573f4c-ca56-451f-9412-f89012611c40', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '76573f4c-ca56-451f-9412-f89012611c40', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '1700a671d54c4a0ebdc9b12ca8167ae7', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:26,840 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 26, 512000, tzinfo=tzutc()), 'msg_id': '872422f0-3cec-4a5b-935d-2c2fb4fbd70a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '872422f0-3cec-4a5b-935d-2c2fb4fbd70a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:27,098 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 26, 580000, tzinfo=tzutc()), 'msg_id': 'c8019e74-02fc-4114-824a-9794e633699d', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'c8019e74-02fc-4114-824a-9794e633699d', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:27,359 ; Comm                                                         ; DEBUG   ; handle_msg[1700a671d54c4a0ebdc9b12ca8167ae7]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 27, 313000, tzinfo=tzutc()), 'msg_id': '938cb333-0846-42e1-a25c-ac3d86af0053', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '938cb333-0846-42e1-a25c-ac3d86af0053', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '1700a671d54c4a0ebdc9b12ca8167ae7', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:27,621 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 27, 512000, tzinfo=tzutc()), 'msg_id': '57e673ee-a3cc-459a-9cb0-0747e3788227', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '57e673ee-a3cc-459a-9cb0-0747e3788227', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:27,962 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 27, 959000, tzinfo=tzutc()), 'msg_id': '04272b20-1cdf-45df-b596-9dc08588041a', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '04272b20-1cdf-45df-b596-9dc08588041a', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': False}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:28,300 ; Comm                                                         ; DEBUG   ; handle_msg[37256474441445b5a6776f5050cd0607]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 28, 297000, tzinfo=tzutc()), 'msg_id': 'cd5a5ce4-e0c8-4455-93a0-80ed67e24220', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': 'cd5a5ce4-e0c8-4455-93a0-80ed67e24220', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': '37256474441445b5a6776f5050cd0607', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:28,566 ; Comm                                                         ; DEBUG   ; handle_msg[deb847df593c42eebb6b2f4ef92e08d9]({'header': {'date': datetime.datetime(2024, 5, 31, 11, 28, 28, 515000, tzinfo=tzutc()), 'msg_id': '4ffc0897-3e04-4fbf-8e6f-00705e769f79', 'msg_type': 'comm_msg', 'session': '3fb87ddc-8835-401c-8899-d871894cf2d5', 'username': '', 'version': '5.2'}, 'msg_id': '4ffc0897-3e04-4fbf-8e6f-00705e769f79', 'msg_type': 'comm_msg', 'parent_header': {}, 'metadata': {}, 'content': {'comm_id': 'deb847df593c42eebb6b2f4ef92e08d9', 'data': {'method': 'update', 'state': {'value': True}, 'buffer_paths': []}}, 'buffers': []})
2024-05-31 13:28:34,833 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:28:34,834 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:28:34,834 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:28:34,834 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:28:34,834 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:28:34,834 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:28:34,835 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:28:34,835 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:28:34,835 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:28:34,866 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
2024-05-31 13:30:11,898 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: Start.
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: bysecond: None
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byminute: [0, 60]
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: byhour: None
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: dateFormat: %Hh:%Mm
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: yPos: 0
2024-05-31 13:30:11,899 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_locator ...
2024-05-31 13:30:11,900 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: ax.xaxis.set_major_formatter ...
2024-05-31 13:30:11,900 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: setp(ax.xaxis.get_majorticklabels() ...
2024-05-31 13:30:11,928 ; PT3S                                                         ; DEBUG   ; Rm.pltHelperX: _Done.
Rm.pltHelperX: _Done.
